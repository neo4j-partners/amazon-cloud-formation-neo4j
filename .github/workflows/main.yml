name: Test CloudFormation Template

on:
  push:
    branches:
      - main
      - 'Neo4j-4.4'
  pull_request:
    branches:    
      - main
      - 'Neo4j-4.4'


jobs:
  test-template:
    name: Test Cloudformation (Neo4j Cluster)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Configure stack name
      id: stack-name    
      run: |
        STACKNAME=`echo test-$(date '+%Y%m%d-%S')`
        echo "Stack name: $STACKNAME"
        echo "::set-output name=stackname::test-20230211-12"

    - name: Run CloudFormation Template
      id: cft
      uses: aws-actions/aws-cloudformation-github-deploy@master
      with:
        name: ${{ steps.stack-name.outputs.stackname }}
        template: marketplace/neo4j.template.yaml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
           NumberOfServers=3,
           SSHCIDR=0.0.0.0/0,
           InstallGraphDataScience=No,
           InstallBloom=No,
           Password=foobar123%,
           GraphDataScienceLicenseKey=None,
           BloomLicenseKey=None

    - name: Retrieve Neo4j URI
      id: uri
      run: |
        URI=`aws cloudformation describe-stacks --region ${AWS_REGION} --query "Stacks[?StackName=='${{ steps.stack-name.outputs.stackname }}'][].Outputs[?OutputKey=='Neo4jURI'].OutputValue" --output text`
        echo "Neo4j URI: $URI"
        echo "::set-output name=uri::$URI"

    - name: Execute tests
      run: |
        ./marketplace/neo4jtester_linux "${{ steps.uri.outputs.uri }}" "neo4j" "foobar123%"

    - name: Delete CloudFormation Stack
      if: always()
      run: |
        aws cloudformation delete-stack --stack-name ${{ steps.stack-name.outputs.stackname }}
        while true
        do
          STACK_STATUS=`aws cloudformation describe-stacks --region us-east-1 --query "Stacks[?StackName=='${{ steps.stack-name.outputs.stackname }}'].StackStatus" --output text`
          echo "Printing stack status := ${STACK_STATUS}" 
          if ${STACK_STATUS} == "DELETE_IN_PROGRESS"; then
            continue
          else
            echo "Cloudformation stack is deleted !!"
            break
          fi
        sleep 10
        done
